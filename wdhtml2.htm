<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" type="image/png" sizes="16X16" href="favicon.ico">
    <title>Become a Web Developer</title>

    <!--Favicon -->
    <link rel="apple-touch-icon" sizes="57x57" href="icons/apple-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="60x60" href="icons/apple-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="72x72" href="icons/apple-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="icons/apple-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="icons/apple-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="icons/apple-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="icons/apple-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="icons/apple-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="icons/apple-icon-180x180.png">
    <link rel="icon" type="image/png" sizes="192x192"  href="icons/android-icon-192x192.png">
    <link rel="icon" type="image/png" sizes="32x32" href="icons/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="icons/favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="16x16" href="icons/favicon-16x16.png">
    <link rel="manifest" href="icons/manifest.json">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="msapplication-TileImage" content="ms-icon-144x144.png">
    <meta name="theme-color" content="#ffffff">

    <!-- Bootstrap Core CSS -->
    <link href="css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom CSS -->
    <link href="css/heroic-features.css" rel="stylesheet">

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
        <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->

</head>

<body>

    <!-- Navigation -->
    <nav class="navbar navbar-inverse navbar-fixed-top" role="navigation">
        <div class="container">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="index.html">Project 0 Home</a>
            </div>
            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav">
                    <li>
                        <a href="github.htm">Github/VSCode</a>
                    </li>
                    <li>
                        <a href="searchengine.htm">Search Engine Optimization</a>
                    </li>
                    <li>
                        <a href="webdevelopment.htm">Web Development</a>
                    </li>
                    <li>
                        <a href="bootstrap.htm">BootStrap
                        </a>
                    </li>
                </ul>
            </div>
            <!-- /.navbar-collapse -->
        </div>
        <!-- /.container -->
    </nav>


        <div class="hero-feature">
                <div class="thumbnail">
                    <img src="images/html2.png" alt="">
                    <div class="caption">
                        <h3> </h3>
                       <p>
                            <!doctype html>
                            <html lang="en">
                            <head>
                            <meta charset="UTF-8">
                            <title>Controlling document outlines</title>
                            </head>
                            <body>
                            <h1>My Big Blog </h1>
                            <nav>
                              <p>site navigation </p>
                            </nav>
                            <article>
                              <h2>Things I like </h2>
                              <section>
                              <h3>My favorite books </h3>
                              <h4>Fiction </h4>
                              <ul>
                                <li>The Hobbit </li>
                                <li>Animal Farm</li>
                                <li>House of Leaves </li>
                              </ul>
                            <h4>Non-fiction</h4>
                            <ul>
                              <li>Theodore Rex</li>
                              <li>Moonwalking with Einstein </li>
                              <li>1493: Uncovering the New World Columbus Created </li>
                            </ul>
                              </section>
                              <section>
                            <h3>My favorite movies and shows </h3>
                            <h4>Movies </h4>
                            <ul>
                              <li>The Wall</li>
                              <li>Apocalypse Now</li>
                              <li>Fight Club</li>
                            </ul>
                            <h4>TV Shows </h4>
                            <ul>
                              <li>The Wire</li>
                              <li>Breaking Bad</li>
                              <li>The Office</li>
                            </ul>
                              </section>
                              <section>
                            <h3>My favorite music </h3>
                            <h4>Jazz </h4>
                            <ul>
                              <li>Charles Mingus</li>
                              <li>Miles Davis</li>
                              <li>Art Blakey</li>
                            </ul>
                            <h4>Rock </h4>
                            <ul>
                              <li>Faith No More</li>
                              <li>Tool</li>
                              <li>Slayer</li>
                            </ul>
                            <h4>Americana</h4>
                            <ul>
                              <li>Avett Brothers</li>
                              <li>Shovels and Rope</li>
                              <li>Old Crow Medicine Show</li>
                            </ul>
                              </section>
                            <aside>
                            <h3>Spotlight favorite</h3>
                            <p>One of my favorite albums has always been Radiohead's OK Computer. It's such a transitional album, as it bridges the gap between sweeping, album-based releases to the present day scene of downloaded songs that aren't consumed in the framework of a larger piece. Rolling Stone once called it the &quot;last great album,&quot; and they might have been right!</p>
                            </aside>
                            <p>copywrite my blog. Feel free to republish with attribution</p>
                            </body>
                            </html>
                            
                            
                            <!DOCTYPE HTML>
                            <html lang="en">
                            <head>
                            <meta charset="utf-8">
                            <title>Introduction to HTML</title>
                            <link href="_css/styles.css" rel="stylesheet" type="text/css">
                            </head>
                            <body>
                            <h1>HTML Essential Training</h1>
                            <h2>Structuring Pages</h2>
                              <nav>
                            <ul>
                              <li><a href="intro.htm" title="Introduction to HTML">Introduction to HTML</a></li>
                              <li><a href="syntax.htm" title="HTML syntax">HTML syntax</a></li>
                              <li><a href="structure.htm" title="Structuring pages">Structuring pages</a></li>
                              <li><a href="links.htm" title="Creating links">Creating links</a></li>
                              <li><a href="reference.htm" title="HTML Reference">HTML reference</a></li>
                              <li><a href="next.htm" title="Next steps">Next steps</a></li>
                            </ul>
                            </nav>
                            <h3> Conveying meaning through structure </h3>
                            <p>Creating properly structured pages is the foundation of any good website. A solid semantic structure allows you to convey meaning and properly represent content types through nothing more than the page's markup. This, in turn, makes your content more accessible, easier to index and search, and makes it easier to repurpose. Remember that there are a lot of different devices, robots, and other user agents that will be reading your code. <em>Without a consistent, semantic structure your site will be less effective.</em> </p>
                            <h3>Sectioning elements </h3>
                            <p>One way to add meaning to your content is to organize them into sections that convey meaning and structure. For example it's pretty standard to contain introductory information within a section, page navigation within its own area, the page's main content in its own region, and related information within a sidebar. HTML contains numerous elements that are designed to assist in the logical structuring and semantics of page content. </p>
                            <p>In previous versions of HTML creating new sections of content was done almost exclusively through the use of <a href="http://www.w3.org/TR/html51/sections.html#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements" title="heading elements"><b>heading</b></a> tags, with <b>divs</b> being used to group areas of content together. <b>Class</b> or <b>ID</b> attributes would allow designers to attach more semantic meaning to the groups, although this meant little to most user agents. In HTML5 new sectioning and semantic elements were introduced to help represent commonly used sections and create more consistent page structures. Tags like the <b>aside</b>, <b>article</b>, <b>footer</b>, <b>header</b>, <b>main</b>, <b>nav</b>, and <b>section</b> allow authors to identify common page regions and convey more semantic meaning. </p>
                            <p>Although some of these elements are very specific, in many cases which element you'll use and how you'll structure them is very much a judgment call. Make sure, however, that your finished structure represents the desired document outline. </p>
                            <p>Learn more about the new sectioning and semantic elements:</p>
                            <ul>
                              <li><a href="http://www.w3.org/TR/html51/sections.html#the-aside-element" title="aside element"><b>aside</b></a></li>
                              <li><a href="http://www.w3.org/TR/html51/sections.html#the-article-element" title="article element"><b>article</b></a></li>
                              <li><a href="http://www.w3.org/TR/html51/sections.html#the-footer-element" title="footer element"><b>footer</b></a></li>
                              <li><a href="http://www.w3.org/TR/html51/sections.html#the-header-element" title="header element"><b>header</b></a></li>
                              <li><a href="http://www.w3.org/TR/html51/grouping-content.html#the-main-element" title="main element"><b>main</b></a></li>
                              <li><a href="http://www.w3.org/TR/html51/sections.html#the-nav-element" title="nav element"><b>nav</b></a></li>
                              <li><a href="http://www.w3.org/TR/html51/sections.html#the-section-element" title="section element"><b>section</b></a></li>
                            </ul>
                            <h3>Document outlines </h3>
                            <p>One of the fundamental concepts of HTML is that its documents can be represented by a document outline that summarizes the content of the page. Imagine a page being represented by a table of contents and you'll have a good idea of what one of these outlines might look like. These outlines assist in tasks such as quickly searching documents and making content easier to navigate for assistive devices. </p>
                            <p>Prior to HTML5, document outlines were generated entirely through the use of headings. An H1 at the top of the page would serve to identify the page content, and subsequent headings would create sections and subsections inside of it. This meant that having a strategy for when to use certain headings was critical for maintaining consistent document structure. In HTML5 a new outline algorithm was introduced that added the new sectioning elements to the heading elements and created a more sophisticated outlining model. Although not currently implemented by user agents it is still recommended that authors familiarize themselves with it so that they're using the new sectioning and semantic tags properly. </p>
                            <p>It is still considered to be a best practice to use heading tags to establish the document outline. Mozilla has a fantastic article on <a href="https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Sections_and_Outlines_of_an_HTML5_document" title="Mozilla Dev article on HTML sections">sections and outlines</a> in HTML documents that I strongly recommend reading.</p>
                            <h4>W3C Warning</h4>
                            <p>At the time of the authoring of this course, the W3C had posted this warning regarding the HTML5 outline algorithm:</p>
                            <blockquote>There are currently no known implementations of the outline algorithm in graphical browsers or assistive technology user agents, although the algorithm is implemented in other software such as conformance checkers. Therefore the outline algorithm cannot be relied upon to convey document structure to users. Authors are advised to use heading rank (h1-h6) to convey document structure.</blockquote>
                            <h3>WAI-ARIA Roles</h3>
                            <p>Carefully structuring an HTML page is the first step into ensuring that the content is accessible to all users. You should also use WAI-ARIA role attributes where appropriate to increase accessibility and improve semantics. WAI-ARIA is short for the Web Accessibility Initiative's Accessible Rich Internet Application specification. The roles attribute attempts to identify content and its capabilities by assigning it to a predefined role. This helps assistive devices understand what the content is, how it relates to other content, and how the content can be interacted with. The W3C has a <a href="http://www.w3.org/TR/2014/WD-aria-in-html-20140626/" title="Using WAI-ARIA in HTML">fantastic resource</a> on how WAI-ARIA works and how it should be used with HTML.</p>
                            <p>&copy; <a href="http://www.lynda.com" title="lynda.com" target="_blank">lynda.com</a> | follow me and lynda.com on Twitter! <a href="https://twitter.com/jameswillweb" title="Follow me on Twitter">@jameswillweb</a> <a href="https://twitter.com/lynda" title="Follow lynda.com on Twitter">@lyndadotcom</a></p>
                            </body>
                            </html>
                            
                            
                            <!DOCTYPE HTML>
                            <html lang="en">
                            <head>
                            <meta charset="utf-8">
                            <title>Introduction to HTML</title>
                            <link href="_css/styles.css" rel="stylesheet" type="text/css">
                            </head>
                            <body>
                            <h1>HTML Essential Training</h1>
                            <h2>Structuring Pages</h2>
                            <nav>
                              <ul>
                                <li><a href="intro.htm" title="Introduction to HTML">Introduction to HTML</a></li>
                                <li><a href="syntax.htm" title="HTML syntax">HTML syntax</a></li>
                                <li><a href="structure.htm" title="Structuring pages">Structuring pages</a></li>
                                <li><a href="links.htm" title="Creating links">Creating links</a></li>
                                <li><a href="reference.htm" title="HTML Reference">HTML reference</a></li>
                                <li><a href="next.htm" title="Next steps">Next steps</a></li>
                              </ul>
                            </nav>
                            <article>
                            <h3> Conveying meaning through structure </h3>
                            <p>Creating properly structured pages is the foundation of any good website. A solid semantic structure allows you to convey meaning and properly represent content types through nothing more than the page's markup. This, in turn, makes your content more accessible, easier to index and search, and makes it easier to repurpose. Remember that there are a lot of different devices, robots, and other user agents that will be reading your code. <em>Without a consistent, semantic structure your site will be less effective.</em> </p>
                            <h3>Sectioning elements </h3>
                            <p>One way to add meaning to your content is to organize them into sections that convey meaning and structure. For example it's pretty standard to contain introductory information within a section, page navigation within its own area, the page's main content in its own region, and related information within a sidebar. HTML contains numerous elements that are designed to assist in the logical structuring and semantics of page content. </p>
                            <p>In previous versions of HTML creating new sections of content was done almost exclusively through the use of <a href="http://www.w3.org/TR/html51/sections.html#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements" title="heading elements"><b>heading</b></a> tags, with <b>divs</b> being used to group areas of content together. <b>Class</b> or <b>ID</b> attributes would allow designers to attach more semantic meaning to the groups, although this meant little to most user agents. In HTML5 new sectioning and semantic elements were introduced to help represent commonly used sections and create more consistent page structures. Tags like the <b>aside</b>, <b>article</b>, <b>footer</b>, <b>header</b>, <b>main</b>, <b>nav</b>, and <b>section</b> allow authors to identify common page regions and convey more semantic meaning. </p>
                            <p>Although some of these elements are very specific, in many cases which element you'll use and how you'll structure them is very much a judgment call. Make sure, however, that your finished structure represents the desired document outline. </p>
                            <p>Learn more about the new sectioning and semantic elements:</p>
                            <ul>
                              <li><a href="http://www.w3.org/TR/html51/sections.html#the-aside-element" title="aside element"><b>aside</b></a></li>
                              <li><a href="http://www.w3.org/TR/html51/sections.html#the-article-element" title="article element"><b>article</b></a></li>
                              <li><a href="http://www.w3.org/TR/html51/sections.html#the-footer-element" title="footer element"><b>footer</b></a></li>
                              <li><a href="http://www.w3.org/TR/html51/sections.html#the-header-element" title="header element"><b>header</b></a></li>
                              <li><a href="http://www.w3.org/TR/html51/grouping-content.html#the-main-element" title="main element"><b>main</b></a></li>
                              <li><a href="http://www.w3.org/TR/html51/sections.html#the-nav-element" title="nav element"><b>nav</b></a></li>
                              <li><a href="http://www.w3.org/TR/html51/sections.html#the-section-element" title="section element"><b>section</b></a></li>
                            </ul>
                            <h3>Document outlines </h3>
                            <p>One of the fundamental concepts of HTML is that its documents can be represented by a document outline that summarizes the content of the page. Imagine a page being represented by a table of contents and you'll have a good idea of what one of these outlines might look like. These outlines assist in tasks such as quickly searching documents and making content easier to navigate for assistive devices. </p>
                            <p>Prior to HTML5, document outlines were generated entirely through the use of headings. An H1 at the top of the page would serve to identify the page content, and subsequent headings would create sections and subsections inside of it. This meant that having a strategy for when to use certain headings was critical for maintaining consistent document structure. In HTML5 a new outline algorithm was introduced that added the new sectioning elements to the heading elements and created a more sophisticated outlining model. Although not currently implemented by user agents it is still recommended that authors familiarize themselves with it so that they're using the new sectioning and semantic tags properly. </p>
                            <p>It is still considered to be a best practice to use heading tags to establish the document outline. Mozilla has a fantastic article on <a href="https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Sections_and_Outlines_of_an_HTML5_document" title="Mozilla Dev article on HTML sections">sections and outlines</a> in HTML documents that I strongly recommend reading.</p>
                            <h4>W3C Warning</h4>
                            <p>At the time of the authoring of this course, the W3C had posted this warning regarding the HTML5 outline algorithm:</p>
                            <blockquote>There are currently no known implementations of the outline algorithm in graphical browsers or assistive technology user agents, although the algorithm is implemented in other software such as conformance checkers. Therefore the outline algorithm cannot be relied upon to convey document structure to users. Authors are advised to use heading rank (h1-h6) to convey document structure.</blockquote>
                            <h3>WAI-ARIA Roles</h3>
                            <p>Carefully structuring an HTML page is the first step into ensuring that the content is accessible to all users. You should also use WAI-ARIA role attributes where appropriate to increase accessibility and improve semantics. WAI-ARIA is short for the Web Accessibility Initiative's Accessible Rich Internet Application specification. The roles attribute attempts to identify content and its capabilities by assigning it to a predefined role. This helps assistive devices understand what the content is, how it relates to other content, and how the content can be interacted with. The W3C has a <a href="http://www.w3.org/TR/2014/WD-aria-in-html-20140626/" title="Using WAI-ARIA in HTML">fantastic resource</a> on how WAI-ARIA works and how it should be used with HTML.</p>
                            </article>
                            <p>&copy; <a href="http://www.lynda.com" title="lynda.com" target="_blank">lynda.com</a> | follow me and lynda.com on Twitter! <a href="https://twitter.com/jameswillweb" title="Follow me on Twitter">@jameswillweb</a> <a href="https://twitter.com/lynda" title="Follow lynda.com on Twitter">@lyndadotcom</a></p>
                            </body>
                            </html>
                            
                            
                            
                            <!DOCTYPE HTML>
                            <html lang="en">
                            <head>
                            <meta charset="utf-8">
                            <title>Introduction to HTML</title>
                            <link href="_css/styles.css" rel="stylesheet" type="text/css">
                            </head>
                            <body>
                            <h1>HTML Essential Training</h1>
                            <h2>Structuring Pages</h2>
                            <nav>
                              <ul>
                                <li><a href="intro.htm" title="Introduction to HTML">Introduction to HTML</a></li>
                                <li><a href="syntax.htm" title="HTML syntax">HTML syntax</a></li>
                                <li><a href="structure.htm" title="Structuring pages">Structuring pages</a></li>
                                <li><a href="links.htm" title="Creating links">Creating links</a></li>
                                <li><a href="reference.htm" title="HTML Reference">HTML reference</a></li>
                                <li><a href="next.htm" title="Next steps">Next steps</a></li>
                              </ul>
                            </nav>
                            <article>
                              <section>
                              <h3> Conveying meaning through structure </h3>
                              <p>Creating properly structured pages is the foundation of any good website. A solid semantic structure allows you to convey meaning and properly represent content types through nothing more than the page's markup. This, in turn, makes your content more accessible, easier to index and search, and makes it easier to repurpose. Remember that there are a lot of different devices, robots, and other user agents that will be reading your code. <em>Without a consistent, semantic structure your site will be less effective.</em> </p>
                              <h3>Sectioning elements </h3>
                              <p>One way to add meaning to your content is to organize them into sections that convey meaning and structure. For example it's pretty standard to contain introductory information within a section, page navigation within its own area, the page's main content in its own region, and related information within a sidebar. HTML contains numerous elements that are designed to assist in the logical structuring and semantics of page content. </p>
                              <p>In previous versions of HTML creating new sections of content was done almost exclusively through the use of <a href="http://www.w3.org/TR/html51/sections.html#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements" title="heading elements"><b>heading</b></a> tags, with <b>divs</b> being used to group areas of content together. <b>Class</b> or <b>ID</b> attributes would allow designers to attach more semantic meaning to the groups, although this meant little to most user agents. In HTML5 new sectioning and semantic elements were introduced to help represent commonly used sections and create more consistent page structures. Tags like the <b>aside</b>, <b>article</b>, <b>footer</b>, <b>header</b>, <b>main</b>, <b>nav</b>, and <b>section</b> allow authors to identify common page regions and convey more semantic meaning. </p>
                              <p>Although some of these elements are very specific, in many cases which element you'll use and how you'll structure them is very much a judgment call. Make sure, however, that your finished structure represents the desired document outline. </p>
                              <p>Learn more about the new sectioning and semantic elements:</p>
                              <ul>
                                <li><a href="http://www.w3.org/TR/html51/sections.html#the-aside-element" title="aside element"><b>aside</b></a></li>
                                <li><a href="http://www.w3.org/TR/html51/sections.html#the-article-element" title="article element"><b>article</b></a></li>
                                <li><a href="http://www.w3.org/TR/html51/sections.html#the-footer-element" title="footer element"><b>footer</b></a></li>
                                <li><a href="http://www.w3.org/TR/html51/sections.html#the-header-element" title="header element"><b>header</b></a></li>
                                <li><a href="http://www.w3.org/TR/html51/grouping-content.html#the-main-element" title="main element"><b>main</b></a></li>
                                <li><a href="http://www.w3.org/TR/html51/sections.html#the-nav-element" title="nav element"><b>nav</b></a></li>
                                <li><a href="http://www.w3.org/TR/html51/sections.html#the-section-element" title="section element"><b>section</b></a></li>
                              </ul>
                              </section>
                              <section>
                              <h3>Document outlines </h3>
                              <p>One of the fundamental concepts of HTML is that its documents can be represented by a document outline that summarizes the content of the page. Imagine a page being represented by a table of contents and you'll have a good idea of what one of these outlines might look like. These outlines assist in tasks such as quickly searching documents and making content easier to navigate for assistive devices. </p>
                              <p>Prior to HTML5, document outlines were generated entirely through the use of headings. An H1 at the top of the page would serve to identify the page content, and subsequent headings would create sections and subsections inside of it. This meant that having a strategy for when to use certain headings was critical for maintaining consistent document structure. In HTML5 a new outline algorithm was introduced that added the new sectioning elements to the heading elements and created a more sophisticated outlining model. Although not currently implemented by user agents it is still recommended that authors familiarize themselves with it so that they're using the new sectioning and semantic tags properly. </p>
                              <p>It is still considered to be a best practice to use heading tags to establish the document outline. Mozilla has a fantastic article on <a href="https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Sections_and_Outlines_of_an_HTML5_document" title="Mozilla Dev article on HTML sections">sections and outlines</a> in HTML documents that I strongly recommend reading.</p>
                              <h4>W3C Warning</h4>
                              <p>At the time of the authoring of this course, the W3C had posted this warning regarding the HTML5 outline algorithm:</p>
                              <blockquote>There are currently no known implementations of the outline algorithm in graphical browsers or assistive technology user agents, although the algorithm is implemented in other software such as conformance checkers. Therefore the outline algorithm cannot be relied upon to convey document structure to users. Authors are advised to use heading rank (h1-h6) to convey document structure.</blockquote>
                              </section>
                            <section>
                              <h3>WAI-ARIA Roles</h3>
                              <p>Carefully structuring an HTML page is the first step into ensuring that the content is accessible to all users. You should also use WAI-ARIA role attributes where appropriate to increase accessibility and improve semantics. WAI-ARIA is short for the Web Accessibility Initiative's Accessible Rich Internet Application specification. The roles attribute attempts to identify content and its capabilities by assigning it to a predefined role. This helps assistive devices understand what the content is, how it relates to other content, and how the content can be interacted with. The W3C has a <a href="http://www.w3.org/TR/2014/WD-aria-in-html-20140626/" title="Using WAI-ARIA in HTML">fantastic resource</a> on how WAI-ARIA works and how it should be used with HTML.</p>
                            </section>
                            </article>
                            <p>&copy; <a href="http://www.lynda.com" title="lynda.com" target="_blank">lynda.com</a> | follow me and lynda.com on Twitter! <a href="https://twitter.com/jameswillweb" title="Follow me on Twitter">@jameswillweb</a> <a href="https://twitter.com/lynda" title="Follow lynda.com on Twitter">@lyndadotcom</a></p>
                            </body>
                            </html>
                            
                            
                            <!DOCTYPE HTML>
                            <html lang="en">
                            <head>
                            <meta charset="utf-8">
                            <title>Introduction to HTML</title>
                            <link href="_css/styles.css" rel="stylesheet" type="text/css">
                            </head>
                            <body>
                            <h1>HTML Essential Training</h1>
                            <h2>Structuring Pages</h2>
                            <nav>
                              <ul>
                                <li><a href="intro.htm" title="Introduction to HTML">Introduction to HTML</a></li>
                                <li><a href="syntax.htm" title="HTML syntax">HTML syntax</a></li>
                                <li><a href="structure.htm" title="Structuring pages">Structuring pages</a></li>
                                <li><a href="links.htm" title="Creating links">Creating links</a></li>
                                <li><a href="reference.htm" title="HTML Reference">HTML reference</a></li>
                                <li><a href="next.htm" title="Next steps">Next steps</a></li>
                              </ul>
                            </nav>
                            <article>
                              <section>
                                <h3> Conveying meaning through structure </h3>
                                <p>Creating properly structured pages is the foundation of any good website. A solid semantic structure allows you to convey meaning and properly represent content types through nothing more than the page's markup. This, in turn, makes your content more accessible, easier to index and search, and makes it easier to repurpose. Remember that there are a lot of different devices, robots, and other user agents that will be reading your code. <em>Without a consistent, semantic structure your site will be less effective.</em> </p>
                              </section>
                              <section>
                                <h3>Sectioning elements </h3>
                                <p>One way to add meaning to your content is to organize them into sections that convey meaning and structure. For example it's pretty standard to contain introductory information within a section, page navigation within its own area, the page's main content in its own region, and related information within a sidebar. HTML contains numerous elements that are designed to assist in the logical structuring and semantics of page content. </p>
                                <p>In previous versions of HTML creating new sections of content was done almost exclusively through the use of <a href="http://www.w3.org/TR/html51/sections.html#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements" title="heading elements"><b>heading</b></a> tags, with <b>divs</b> being used to group areas of content together. <b>Class</b> or <b>ID</b> attributes would allow designers to attach more semantic meaning to the groups, although this meant little to most user agents. In HTML5 new sectioning and semantic elements were introduced to help represent commonly used sections and create more consistent page structures. Tags like the <b>aside</b>, <b>article</b>, <b>footer</b>, <b>header</b>, <b>main</b>, <b>nav</b>, and <b>section</b> allow authors to identify common page regions and convey more semantic meaning. </p>
                                <p>Although some of these elements are very specific, in many cases which element you'll use and how you'll structure them is very much a judgment call. Make sure, however, that your finished structure represents the desired document outline. </p>
                                <p>Learn more about the new sectioning and semantic elements:</p>
                                <ul>
                                  <li><a href="http://www.w3.org/TR/html51/sections.html#the-aside-element" title="aside element"><b>aside</b></a></li>
                                  <li><a href="http://www.w3.org/TR/html51/sections.html#the-article-element" title="article element"><b>article</b></a></li>
                                  <li><a href="http://www.w3.org/TR/html51/sections.html#the-footer-element" title="footer element"><b>footer</b></a></li>
                                  <li><a href="http://www.w3.org/TR/html51/sections.html#the-header-element" title="header element"><b>header</b></a></li>
                                  <li><a href="http://www.w3.org/TR/html51/grouping-content.html#the-main-element" title="main element"><b>main</b></a></li>
                                  <li><a href="http://www.w3.org/TR/html51/sections.html#the-nav-element" title="nav element"><b>nav</b></a></li>
                                  <li><a href="http://www.w3.org/TR/html51/sections.html#the-section-element" title="section element"><b>section</b></a></li>
                                </ul>
                              </section>
                              <section>
                                <h3>Document outlines </h3>
                                <p>One of the fundamental concepts of HTML is that its documents can be represented by a document outline that summarizes the content of the page. Imagine a page being represented by a table of contents and you'll have a good idea of what one of these outlines might look like. These outlines assist in tasks such as quickly searching documents and making content easier to navigate for assistive devices. </p>
                                <p>Prior to HTML5, document outlines were generated entirely through the use of headings. An H1 at the top of the page would serve to identify the page content, and subsequent headings would create sections and subsections inside of it. This meant that having a strategy for when to use certain headings was critical for maintaining consistent document structure. In HTML5 a new outline algorithm was introduced that added the new sectioning elements to the heading elements and created a more sophisticated outlining model. Although not currently implemented by user agents it is still recommended that authors familiarize themselves with it so that they're using the new sectioning and semantic tags properly. </p>
                                <p>It is still considered to be a best practice to use heading tags to establish the document outline. Mozilla has a fantastic article on <a href="https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Sections_and_Outlines_of_an_HTML5_document" title="Mozilla Dev article on HTML sections">sections and outlines</a> in HTML documents that I strongly recommend reading.</p>
                                  <aside>  
                                <h4>W3C Warning</h4>
                                  <p>At the time of the authoring of this course, the W3C had posted this warning regarding the HTML5 outline algorithm:</p>
                                  <blockquote>There are currently no known implementations of the outline algorithm in graphical browsers or assistive technology user agents, although the algorithm is implemented in other software such as conformance checkers. Therefore the outline algorithm cannot be relied upon to convey document structure to users. Authors are advised to use heading rank (h1-h6) to convey document structure.</blockquote>
                                  </aside>
                                </section>
                              <section>
                                <h3>WAI-ARIA Roles</h3>
                                <p>Carefully structuring an HTML page is the first step into ensuring that the content is accessible to all users. You should also use WAI-ARIA role attributes where appropriate to increase accessibility and improve semantics. WAI-ARIA is short for the Web Accessibility Initiative's Accessible Rich Internet Application specification. The roles attribute attempts to identify content and its capabilities by assigning it to a predefined role. This helps assistive devices understand what the content is, how it relates to other content, and how the content can be interacted with. The W3C has a <a href="http://www.w3.org/TR/2014/WD-aria-in-html-20140626/" title="Using WAI-ARIA in HTML">fantastic resource</a> on how WAI-ARIA works and how it should be used with HTML.</p>
                              </section>
                            </article>
                            <p>&copy; <a href="http://www.lynda.com" title="lynda.com" target="_blank">lynda.com</a> | follow me and lynda.com on Twitter! <a href="https://twitter.com/jameswillweb" title="Follow me on Twitter">@jameswillweb</a> <a href="https://twitter.com/lynda" title="Follow lynda.com on Twitter">@lyndadotcom</a></p>
                            </body>
                            </html>
                            
                            
                            <!doctype html>
                            <html lang="en">
                            <head>
                            <meta charset="UTF-8">
                            <title>Controlling document outlines</title>
                                <style>
                                    .book {
                                        background: #369;
                                        padding:16px;
                                        width: 250px;
                                        color: white;
                                        margin-bottom: 16px;
                                    }
                                    .book h5 {
                                        font: 1.2em Arial, sans-serif;
                                        margin: 0;
                                    }
                                </style>
                            </head>
                            <body>
                            <h1>My Big Blog </h1>
                            <nav>
                              <p>site navigation </p>
                            </nav>
                            <article>
                              <h2>Things I like </h2>
                              <section>
                                <h3>My favorite books </h3>
                                <h4>Fiction </h4>
                                <div class="book">
                                <h5>The Hobbit </h5>
                                <p>by JRR Tolkein</p>
                                <p>A short, slightly introverted humanoid goes on a grand adventure and steals a ring.</p>
                                </div>
                                <div class="book">
                                <h5>Animal Farm</h5>
                                <p>by George Orwell</p>
                                <p>Animals revolt against their farmer only to find that the pigs that take his place are just as bad.</p>
                                </div>
                                <div class="book">
                                <h5>House of Leaves </h5>
                                <p>by Mark Danielewski</p>
                                <p>A story within a story of a family that learns their house is bigger on the inside than it is outside</p>
                                </div>
                                <h4>Non-fiction</h4>
                                <p>Theodore Rex</p>
                                <p>Moonwalking with Einstein </p>
                                <p>1493: Uncovering the New World Columbus Created </p>
                              </section>
                              <section>
                                <h3>My favorite movies and shows </h3>
                                <h4>Movies </h4>
                                <ul>
                                  <li>The Wall</li>
                                  <li>Apocalypse Now</li>
                                  <li>Fight Club</li>
                                </ul>
                                <h4>TV Shows </h4>
                                <ul>
                                  <li>The Wire</li>
                                  <li>Breaking Bad</li>
                                  <li>The Office</li>
                                </ul>
                              </section>
                              <section>
                                <h3>My favorite music </h3>
                                <h4>Jazz </h4>
                                <ul>
                                  <li>Charles Mingus</li>
                                  <li>Miles Davis</li>
                                  <li>Art Blakey</li>
                                </ul>
                                <h4>Rock </h4>
                                <ul>
                                  <li>Faith No More</li>
                                  <li>Tool</li>
                                  <li>Slayer</li>
                                </ul>
                                <h4>Americana</h4>
                                <ul>
                                  <li>Avett Brothers</li>
                                  <li>Shovels and Rope</li>
                                  <li>Old Crow Medicine Show</li>
                                </ul>
                              </section>
                              <aside>
                                <h3>Spotlight favorite</h3>
                                <p>One of my favorite albums has always been Radiohead's OK Computer. It's such a transitional album, as it bridges the gap between sweeping, album-based releases to the present day scene of downloaded songs that aren't consumed in the framework of a larger piece. Rolling Stone once called it the &quot;last great album,&quot; and they might have been right!</p>
                              </aside>
                            </article>
                            <p>copywrite my blog. Feel free to republish with attribution</p>
                            </body>
                            </html>
                            
                            
                            <!DOCTYPE HTML>
                            <html lang="en">
                            <head>
                            <meta charset="utf-8">
                            <title>Introduction to HTML</title>
                            <link href="_css/styles.css" rel="stylesheet" type="text/css">
                            </head>
                            <body>
                              <header>
                            <h1>HTML Essential Training</h1>
                            <h2>Structuring Pages</h2>
                            <nav>
                              <ul>
                                <li><a href="intro.htm" title="Introduction to HTML">Introduction to HTML</a></li>
                                <li><a href="syntax.htm" title="HTML syntax">HTML syntax</a></li>
                                <li><a href="structure.htm" title="Structuring pages">Structuring pages</a></li>
                                <li><a href="links.htm" title="Creating links">Creating links</a></li>
                                <li><a href="reference.htm" title="HTML Reference">HTML reference</a></li>
                                <li><a href="next.htm" title="Next steps">Next steps</a></li>
                              </ul>
                            </nav>
                              </header>
                              <main>
                            <article>
                              <header>
                                <h3> Conveying meaning through structure </h3>
                                <p>Creating properly structured pages is the foundation of any good website. A solid semantic structure allows you to convey meaning and properly represent content types through nothing more than the page's markup. This, in turn, makes your content more accessible, easier to index and search, and makes it easier to repurpose. Remember that there are a lot of different devices, robots, and other user agents that will be reading your code. <em>Without a consistent, semantic structure your site will be less effective.</em> </p>
                              </header>
                                <h3>Sectioning elements </h3>
                                <p>One way to add meaning to your content is to organize them into sections that convey meaning and structure. For example it's pretty standard to contain introductory information within a section, page navigation within its own area, the page's main content in its own region, and related information within a sidebar. HTML contains numerous elements that are designed to assist in the logical structuring and semantics of page content. </p>
                                <p>In previous versions of HTML creating new sections of content was done almost exclusively through the use of <a href="http://www.w3.org/TR/html51/sections.html#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements" title="heading elements"><b>heading</b></a> tags, with <b>divs</b> being used to group areas of content together. <b>Class</b> or <b>ID</b> attributes would allow designers to attach more semantic meaning to the groups, although this meant little to most user agents. In HTML5 new sectioning and semantic elements were introduced to help represent commonly used sections and create more consistent page structures. Tags like the <b>aside</b>, <b>article</b>, <b>footer</b>, <b>header</b>, <b>main</b>, <b>nav</b>, and <b>section</b> allow authors to identify common page regions and convey more semantic meaning. </p>
                                <p>Although some of these elements are very specific, in many cases which element you'll use and how you'll structure them is very much a judgment call. Make sure, however, that your finished structure represents the desired document outline. </p>
                                <p>Learn more about the new sectioning and semantic elements:</p>
                                <ul>
                                  <li><a href="http://www.w3.org/TR/html51/sections.html#the-aside-element" title="aside element"><b>aside</b></a></li>
                                  <li><a href="http://www.w3.org/TR/html51/sections.html#the-article-element" title="article element"><b>article</b></a></li>
                                  <li><a href="http://www.w3.org/TR/html51/sections.html#the-footer-element" title="footer element"><b>footer</b></a></li>
                                  <li><a href="http://www.w3.org/TR/html51/sections.html#the-header-element" title="header element"><b>header</b></a></li>
                                  <li><a href="http://www.w3.org/TR/html51/grouping-content.html#the-main-element" title="main element"><b>main</b></a></li>
                                  <li><a href="http://www.w3.org/TR/html51/sections.html#the-nav-element" title="nav element"><b>nav</b></a></li>
                                  <li><a href="http://www.w3.org/TR/html51/sections.html#the-section-element" title="section element"><b>section</b></a></li>
                                </ul>
                              </section>
                              <section>
                                <h3>Document outlines </h3>
                                <p>One of the fundamental concepts of HTML is that its documents can be represented by a document outline that summarizes the content of the page. Imagine a page being represented by a table of contents and you'll have a good idea of what one of these outlines might look like. These outlines assist in tasks such as quickly searching documents and making content easier to navigate for assistive devices. </p>
                                <p>Prior to HTML5, document outlines were generated entirely through the use of headings. An H1 at the top of the page would serve to identify the page content, and subsequent headings would create sections and subsections inside of it. This meant that having a strategy for when to use certain headings was critical for maintaining consistent document structure. In HTML5 a new outline algorithm was introduced that added the new sectioning elements to the heading elements and created a more sophisticated outlining model. Although not currently implemented by user agents it is still recommended that authors familiarize themselves with it so that they're using the new sectioning and semantic tags properly. </p>
                                <p>It is still considered to be a best practice to use heading tags to establish the document outline. Mozilla has a fantastic article on <a href="https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Sections_and_Outlines_of_an_HTML5_document" title="Mozilla Dev article on HTML sections">sections and outlines</a> in HTML documents that I strongly recommend reading.</p>
                                <aside>
                                  <h4>W3C Warning</h4>
                                  <p>At the time of the authoring of this course, the W3C had posted this warning regarding the HTML5 outline algorithm:</p>
                                  <blockquote>There are currently no known implementations of the outline algorithm in graphical browsers or assistive technology user agents, although the algorithm is implemented in other software such as conformance checkers. Therefore the outline algorithm cannot be relied upon to convey document structure to users. Authors are advised to use heading rank (h1-h6) to convey document structure.</blockquote>
                                </aside>
                              </section>
                              <section>
                                <h3>WAI-ARIA Roles</h3>
                                <p>Carefully structuring an HTML page is the first step into ensuring that the content is accessible to all users. You should also use WAI-ARIA role attributes where appropriate to increase accessibility and improve semantics. WAI-ARIA is short for the Web Accessibility Initiative's Accessible Rich Internet Application specification. The roles attribute attempts to identify content and its capabilities by assigning it to a predefined role. This helps assistive devices understand what the content is, how it relates to other content, and how the content can be interacted with. The W3C has a <a href="http://www.w3.org/TR/2014/WD-aria-in-html-20140626/" title="Using WAI-ARIA in HTML">fantastic resource</a> on how WAI-ARIA works and how it should be used with HTML.</p>
                              </section>
                            </article>
                            </main>
                            <footer>
                            <p>&copy; <a href="http://www.lynda.com" title="lynda.com" target="_blank">lynda.com</a> | follow me and lynda.com on Twitter! <a href="https://twitter.com/jameswillweb" title="Follow me on Twitter">@jameswillweb</a> <a href="https://twitter.com/lynda" title="Follow lynda.com on Twitter">@lyndadotcom</a></p>
                            </footer>
                            </body>
                            </html>
                            
                            
                            <!DOCTYPE HTML>
                            <html lang="en">
                            <head>
                            <meta charset="utf-8">
                            <title>Introduction to HTML</title>
                            <link href="_css/styles.css" rel="stylesheet" type="text/css">
                            </head>
                            <body>
                            <header roll="banner">
                              <h1>HTML Essential Training</h1>
                              <h2>Structuring Pages</h2>
                              <nav role="navigation">
                                <ul>
                                  <li><a href="intro.htm" title="Introduction to HTML">Introduction to HTML</a></li>
                                  <li><a href="syntax.htm" title="HTML syntax">HTML syntax</a></li>
                                  <li><a href="structure.htm" title="Structuring pages">Structuring pages</a></li>
                                  <li><a href="links.htm" title="Creating links">Creating links</a></li>
                                  <li><a href="reference.htm" title="HTML Reference">HTML reference</a></li>
                                  <li><a href="next.htm" title="Next steps">Next steps</a></li>
                                </ul>
                              </nav>
                            </header>
                            <main role="main">
                              <article role="article">
                                <header>
                                  <h3> Conveying meaning through structure </h3>
                                  <p>Creating properly structured pages is the foundation of any good website. A solid semantic structure allows you to convey meaning and properly represent content types through nothing more than the page's markup. This, in turn, makes your content more accessible, easier to index and search, and makes it easier to repurpose. Remember that there are a lot of different devices, robots, and other user agents that will be reading your code. <em>Without a consistent, semantic structure your site will be less effective.</em> </p>
                                </header>
                                <section>
                                  <h3>Sectioning elements </h3>
                                  <p>One way to add meaning to your content is to organize them into sections that convey meaning and structure. For example it's pretty standard to contain introductory information within a section, page navigation within its own area, the page's main content in its own region, and related information within a sidebar. HTML contains numerous elements that are designed to assist in the logical structuring and semantics of page content. </p>
                                  <p>In previous versions of HTML creating new sections of content was done almost exclusively through the use of <a href="http://www.w3.org/TR/html51/sections.html#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements" title="heading elements"><b>heading</b></a> tags, with <b>divs</b> being used to group areas of content together. <b>Class</b> or <b>ID</b> attributes would allow designers to attach more semantic meaning to the groups, although this meant little to most user agents. In HTML5 new sectioning and semantic elements were introduced to help represent commonly used sections and create more consistent page structures. Tags like the <b>aside</b>, <b>article</b>, <b>footer</b>, <b>header</b>, <b>main</b>, <b>nav</b>, and <b>section</b> allow authors to identify common page regions and convey more semantic meaning. </p>
                                  <p>Although some of these elements are very specific, in many cases which element you'll use and how you'll structure them is very much a judgment call. Make sure, however, that your finished structure represents the desired document outline. </p>
                                  <p>Learn more about the new sectioning and semantic elements:</p>
                                  <ul>
                                    <li><a href="http://www.w3.org/TR/html51/sections.html#the-aside-element" title="aside element"><b>aside</b></a></li>
                                    <li><a href="http://www.w3.org/TR/html51/sections.html#the-article-element" title="article element"><b>article</b></a></li>
                                    <li><a href="http://www.w3.org/TR/html51/sections.html#the-footer-element" title="footer element"><b>footer</b></a></li>
                                    <li><a href="http://www.w3.org/TR/html51/sections.html#the-header-element" title="header element"><b>header</b></a></li>
                                    <li><a href="http://www.w3.org/TR/html51/grouping-content.html#the-main-element" title="main element"><b>main</b></a></li>
                                    <li><a href="http://www.w3.org/TR/html51/sections.html#the-nav-element" title="nav element"><b>nav</b></a></li>
                                    <li><a href="http://www.w3.org/TR/html51/sections.html#the-section-element" title="section element"><b>section</b></a></li>
                                  </ul>
                                </section>
                                <section>
                                  <h3>Document outlines </h3>
                                  <p>One of the fundamental concepts of HTML is that its documents can be represented by a document outline that summarizes the content of the page. Imagine a page being represented by a table of contents and you'll have a good idea of what one of these outlines might look like. These outlines assist in tasks such as quickly searching documents and making content easier to navigate for assistive devices. </p>
                                  <p>Prior to HTML5, document outlines were generated entirely through the use of headings. An H1 at the top of the page would serve to identify the page content, and subsequent headings would create sections and subsections inside of it. This meant that having a strategy for when to use certain headings was critical for maintaining consistent document structure. In HTML5 a new outline algorithm was introduced that added the new sectioning elements to the heading elements and created a more sophisticated outlining model. Although not currently implemented by user agents it is still recommended that authors familiarize themselves with it so that they're using the new sectioning and semantic tags properly. </p>
                                  <p>It is still considered to be a best practice to use heading tags to establish the document outline. Mozilla has a fantastic article on <a href="https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Sections_and_Outlines_of_an_HTML5_document" title="Mozilla Dev article on HTML sections">sections and outlines</a> in HTML documents that I strongly recommend reading.</p>
                                  <aside role="complementary">
                                    <h4>W3C Warning</h4>
                                    <p>At the time of the authoring of this course, the W3C had posted this warning regarding the HTML5 outline algorithm:</p>
                                    <blockquote>There are currently no known implementations of the outline algorithm in graphical browsers or assistive technology user agents, although the algorithm is implemented in other software such as conformance checkers. Therefore the outline algorithm cannot be relied upon to convey document structure to users. Authors are advised to use heading rank (h1-h6) to convey document structure.</blockquote>
                                  </aside>
                                </section>
                                <section>
                                  <h3>WAI-ARIA Roles</h3>
                                  <p>Carefully structuring an HTML page is the first step into ensuring that the content is accessible to all users. You should also use WAI-ARIA role attributes where appropriate to increase accessibility and improve semantics. WAI-ARIA is short for the Web Accessibility Initiative's Accessible Rich Internet Application specification. The roles attribute attempts to identify content and its capabilities by assigning it to a predefined role. This helps assistive devices understand what the content is, how it relates to other content, and how the content can be interacted with. The W3C has a <a href="http://www.w3.org/TR/2014/WD-aria-in-html-20140626/" title="Using WAI-ARIA in HTML">fantastic resource</a> on how WAI-ARIA works and how it should be used with HTML.</p>
                                </section>
                              </article>
                            </main>
                            <footer role="contentinfo"
                              <p>&copy; <a href="http://www.lynda.com" title="lynda.com" target="_blank">lynda.com</a> | follow me and lynda.com on Twitter! <a href="https://twitter.com/jameswillweb" title="Follow me on Twitter">@jameswillweb</a> <a href="https://twitter.com/lynda" title="Follow lynda.com on Twitter">@lyndadotcom</a></p>
                            </footer>
                            </body>
                            </html>
                            
                       </p>
                        
                    </div>
                </div>
         </div>

         <div class="hero-feature">
                <div class="thumbnail">
                        <p>
                                <a href="wdjobs.htm" class="btn btn-default">Web development or Web Related Jobs</a>
                                <a href="wdhtml1.htm" class="btn btn-default">HTML Lecture Part 1</a>
                               
                                <a href="wdhtml3.htm" class="btn btn-default">HTML Lecture Part 3</a>
                                <a href="webdeveloper.htm" class="btn btn-default">Become a Web Developer</a>
                            </p>
                </div>
            </div>
    <!-- jQuery -->
    <script src="js/jquery.js"></script>

    <!-- Bootstrap Core JavaScript -->
    <script src="js/bootstrap.min.js"></script>

</body>

</html>